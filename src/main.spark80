.include "../include/spcpu_ca65_macro_pack.spinc"
.include "test_var_stuff.spinc"
.include "misc_utility_macros.spinc"



.segment "VECTORS"
reset_vec_addr:
	.dbyt reset
interrupt_vec_addr:
	.dbyt isr_main



.segment "ROM"







reset:
	init_sp
	
	
	;cpypi r0p, main
	;;jumpi main
	;jump r0p
	jumpi main





.macro gen_branch_test_subroutine subroutine_name, \
	branch_type_0_str, branch_type_1_str, ret_val_0, ret_val_1, \
	compare_type_str, reg_or_pair_0, reg_or_pair_1
	
subroutine_name:
	;cmp r0, r1
	.ident(compare_type_str) reg_or_pair_0, reg_or_pair_1
	.ident(branch_type_0_str) @label_0
	.ident(branch_type_1_str) @label_1
	
	
@neither:
	cpyi r0, $ff
	bra @done
	
@label_0:
	cpyi r0, ret_val_0
	bra @done
	
@label_1:
	cpyi r0, ret_val_1
	;bra @done
	
@done:
	basic_ret
.endmac




gen_branch_test_subroutine test_blo_bhs, "blo", "bhs", $22, $aa, \
	"cmp", r0, r1
gen_branch_test_subroutine test_bls_bhi, "bls", "bhi", $22, $aa, \
	"cmp", r0, r1
gen_branch_test_subroutine test_blt_bge, "blt", "bge", $22, $aa, \
	"cmp", r0, r1
gen_branch_test_subroutine test_ble_bgt, "ble", "bgt", $22, $aa, \
	"cmp", r0, r1


gen_branch_test_subroutine test_pair_blo_bhs, "blo", "bhs", $22, $aa, \
	"cmpp", r0p, r2p
gen_branch_test_subroutine test_pair_bls_bhi, "bls", "bhi", $22, $aa, \
	"cmpp", r0p, r2p
gen_branch_test_subroutine test_pair_blt_bge, "blt", "bge", $22, $aa, \
	"cmpp", r0p, r2p
gen_branch_test_subroutine test_pair_ble_bgt, "ble", "bgt", $22, $aa, \
	"cmpp", r0p, r2p



.macro do_test_two_branches r0_imm, r1_imm, result_store_index, \
	tester_subroutine
	cpypi r0p, ( ( .lobyte(r0_imm) << 8 ) | ( .lobyte(r1_imm) ) )
	calli tester_subroutine
	strxi_abs r0, branch_test_result_arr, result_store_index
.endmac

.macro do_test_pair_two_branches r0p_imm, r2p_imm, result_store_index, \
	tester_subroutine
	cpypi r0p, r0p_imm
	cpypi r2p, r2p_imm
	calli tester_subroutine
	strxi_abs r0, branch_test_result_arr, result_store_index
.endmac


.macro do_test_blo_bhs r0_imm, r1_imm, result_store_index
	do_test_two_branches r0_imm, r1_imm, result_store_index, test_blo_bhs
.endmac
.macro do_test_bls_bhi r0_imm, r1_imm, result_store_index
	do_test_two_branches r0_imm, r1_imm, result_store_index, test_bls_bhi
.endmac
.macro do_test_blt_bge r0_imm, r1_imm, result_store_index
	do_test_two_branches r0_imm, r1_imm, result_store_index, test_blt_bge
.endmac
.macro do_test_ble_bgt r0_imm, r1_imm, result_store_index
	do_test_two_branches r0_imm, r1_imm, result_store_index, test_ble_bgt
.endmac



.macro do_test_pair_blo_bhs r0p_imm, r2p_imm, result_store_index
	do_test_pair_two_branches r0p_imm, r2p_imm, result_store_index, \
		test_pair_blo_bhs
.endmac
.macro do_test_pair_bls_bhi r0p_imm, r2p_imm, result_store_index
	do_test_pair_two_branches r0p_imm, r2p_imm, result_store_index, \
		test_pair_bls_bhi
.endmac
.macro do_test_pair_blt_bge r0p_imm, r2p_imm, result_store_index
	do_test_pair_two_branches r0p_imm, r2p_imm, result_store_index, \
		test_pair_blt_bge
.endmac
.macro do_test_pair_ble_bgt r0p_imm, r2p_imm, result_store_index
	do_test_pair_two_branches r0p_imm, r2p_imm, result_store_index, \
		test_pair_ble_bgt
.endmac



main:
	;do_test_blo_bhs $ff, $80, 0
	;do_test_blo_bhs $88, $99, 1
	;do_test_blo_bhs $99, $8f, 2
	;do_test_blo_bhs $aa, $aa, 3
	;do_test_blo_bhs $ba, $bb, 4
	;do_test_blo_bhs $bb, $bb, 5
	;do_test_blo_bhs $bc, $bb, 6
	
	;do_test_bls_bhi $ff, $80, 0
	;do_test_bls_bhi $88, $99, 1
	;do_test_bls_bhi $99, $8f, 2
	;do_test_bls_bhi $aa, $aa, 3
	;do_test_bls_bhi $ba, $bb, 4
	;do_test_bls_bhi $bb, $bb, 5
	;do_test_bls_bhi $bc, $bb, 6
	
	
	;do_test_blt_bge -57, -58, 0
	;do_test_blt_bge -59, -59, 1
	;do_test_blt_bge -59, -57, 2
	;do_test_blt_bge -8, -9, 3
	;do_test_blt_bge -9, -9, 4
	;do_test_blt_bge -10, -9, 5
	;do_test_blt_bge 5, 7, 6
	
	;do_test_ble_bgt -57, -58, 0
	;do_test_ble_bgt -59, -59, 1
	;do_test_ble_bgt -59, -57, 2
	;do_test_ble_bgt -8, -9, 3
	;do_test_ble_bgt -9, -9, 4
	;do_test_ble_bgt -10, -9, 5
	;do_test_ble_bgt 5, 7, 6
	
	
	;do_test_pair_blo_bhs 200, 900, 0
	;do_test_pair_blo_bhs 3000, 900, 1
	;do_test_pair_blo_bhs 15000, 15001, 2
	;do_test_pair_blo_bhs -15000, -15001, 3
	;do_test_pair_blo_bhs 30383, 30384, 4
	;do_test_pair_blo_bhs 30384, 30384, 5
	;do_test_pair_blo_bhs 30385, 30384, 6
	
	
	do_test_pair_blt_bge 3000, -3000, 0
	do_test_pair_blt_bge -9001, -9000, 1
	do_test_pair_blt_bge -9000, -9000, 2
	do_test_pair_blt_bge -8999, -9000, 3
	
	;do_test_pair_ble_bgt 3000, -3000, 0
	;do_test_pair_ble_bgt -9001, -9000, 1
	;do_test_pair_ble_bgt -9000, -9000, 2
	;do_test_pair_ble_bgt -8999, -9000, 3
	
	
;	cpypi r0p, $0020
;	cpyp lr, r0p
;	subpbi r0p, $21
;	;bpl @temp_0
;	;bmi @temp_1
;	bvs @temp_0
;	bvc @temp_1
;	
;@temp_0:
;	cpyi r2, $33
;	jumpi @store_test
;	
;@temp_1:
;	cpyi r2, $55
;	
;@store_test:
;	;strxi_abs r2, branch_test_result_arr, 0
;	;str_abs r2, branch_test_result_arr
	
	
@load_results:
	ldrxi_abs r0, branch_test_result_arr, 0
	ldrxi_abs r1, branch_test_result_arr, 1
	ldrxi_abs r2, branch_test_result_arr, 2
	ldrxi_abs r3, branch_test_result_arr, 3
	ldrxi_abs r4, branch_test_result_arr, 4
	ldrxi_abs r5, branch_test_result_arr, 5
	ldrxi_abs r6, branch_test_result_arr, 6
	ldrxi_abs r7, branch_test_result_arr, 7
	
	
@done:
	jumpi end_simulation




testing_main:
	push_pair lr
	
	;cpypi r0p, 2000
	;cpyi r2, 30
	;cpyi r2, 2
	
	;calli slow_umod_16_by_8
	;calli long_udiv_16_by_8
	
	;calli test_long_udiv
	
	;calli do_tests
	
	
@done:
	pop_pair lr
	basic_ret

do_tests:
	push_pair lr
	
	;cpyi r0, $09
	;calli test_ldst
	;;calli test_ldst_and_push_pop
	;cmpi r0, $00
	;cpyi r0, ( $02 | $80 )
	;beq @testing_failed
	;
	;
	;
	;calli test_32_bit_add
	;cmpi r0, $00
	;cpyi r0, ( $03 | $80 )
	;beq @testing_failed
	;
	;calli test_32_bit_subtract
	;cmpi r0, $00
	;cpyi r0, ( $04 | $80 )
	;beq @testing_failed
	;
	;
	;calli test_32_bit_add_immediate
	;cmpi r0, $00
	;cpyi r0, ( $05 | $80 )
	;beq @testing_failed
	;
	;calli test_32_bit_subtract_immediate
	;cmpi r0, $00
	;cpyi r0, ( $06 | $80 )
	;beq @testing_failed
	;
	;
	;calli test_addpb
	;cmpi r0, $00
	;cpyi r0, ( $07 | $80 )
	;beq @testing_failed
	;
	;calli test_subpb
	;cmpi r0, $00
	;cpyi r0, ( $08 | $80 )
	;beq @testing_failed
	;
	;calli test_and_orr_inv_invp
	;cmpi r0, $00
	;cpyi r0, ( $09 | $80 )
	;beq @testing_failed
	;
	;
	;calli test_xor
	;cmpi r0, $00
	;cpyi r0, ( $0a | $80 )
	;beq @testing_failed
	;
	;
	;calli test_asr
	;cmpi r0, $00
	;cpyi r0, ( $0b | $80 )
	;beq @testing_failed
	;
	;
	;calli test_rol
	;cmpi r0, $00
	;cpyi r0, ( $0c | $80 )
	;beq @testing_failed
	
	
@testing_succeeded:
	cpyi r0, $01
	bra @testing_done
	
@testing_failed:
	;cpyi r0, $00
	
@testing_done:
	pop_pair lr
	basic_ret



isr_main:
	push_flags
	
	;cpyi r0, $9a
	;calli other_file_test_subroutine
	
	pop_flags
	
	cpypira pc
	;reti



