.include "../include/spcpu_ca65_macro_pack.spinc"
.include "test_var_stuff.spinc"
.include "misc_utility_macros.spinc"



.segment "VECTORS"
reset_vec_addr:
	.dbyt reset
interrupt_vec_addr:
	.dbyt isr_main



.segment "ROM"







reset:
	init_sp
	
	
	;cpypi r0p, main
	;;jumpi main
	;jump r0p
	jumpi main







.macro do_test_blo_bhs r0_imm, r1_imm, store_index
	;cpypi r0p, ( ( .lobyte(r0_imm) << 8 ) | ( .lobyte(r1_imm) ) )
	cpyi r0, r0_imm
	cpyi r1, r1_imm
	calli test_blo_bhs
	strxi_abs r0, branch_test_result_arr, store_index
.endmac

.macro do_test_bls_bhi r0_imm, r1_imm, store_index
	;cpypi r0p, ( ( .lobyte(r0_imm) << 8 ) | ( .lobyte(r1_imm) ) )
	cpyi r0, r0_imm
	cpyi r1, r1_imm
	calli test_bls_bhi
	strxi_abs r0, branch_test_result_arr, store_index
.endmac

.macro do_test_blt_bge r0_imm, r1_imm, store_index
	cpyi r0, r0_imm
	cpyi r1, r1_imm
	calli test_blt_bge
	strxi_abs r0, branch_test_result_arr, store_index
.endmac

.macro do_test_ble_bgt r0_imm, r1_imm, store_index
	cpyi r0, r0_imm
	cpyi r1, r1_imm
	calli test_ble_bgt
	strxi_abs r0, branch_test_result_arr, store_index
.endmac

main:
	;cpyi r0, $ff
	;cmpi r0, $80
	
	;blo @less_than
	;bhs @greater_than_or_equal
	
	
	;do_test_blo_bhs $ff, $80, 0
	;do_test_blo_bhs $88, $99, 1
	;do_test_blo_bhs $99, $8f, 2
	;do_test_blo_bhs $aa, $aa, 3
	;do_test_blo_bhs $ba, $bb, 4
	;do_test_blo_bhs $bb, $bb, 5
	;do_test_blo_bhs $bc, $bb, 6
	
	;do_test_bls_bhi $ff, $80, 0
	;do_test_bls_bhi $88, $99, 1
	;do_test_bls_bhi $99, $8f, 2
	;do_test_bls_bhi $aa, $aa, 3
	;do_test_bls_bhi $ba, $bb, 4
	;do_test_bls_bhi $bb, $bb, 5
	;do_test_bls_bhi $bc, $bb, 6
	
	
	do_test_blt_bge -57, -58, 0
	do_test_blt_bge -59, -59, 1
	do_test_blt_bge -59, -57, 2
	do_test_blt_bge -8, -9, 3
	do_test_blt_bge -9, -9, 4
	do_test_blt_bge -10, -9, 5
	do_test_blt_bge 5, 7, 6
	
	;do_test_ble_bgt $ff, $80, 0
	;do_test_ble_bgt $88, $99, 1
	;do_test_ble_bgt $99, $8f, 2
	;do_test_ble_bgt $aa, $aa, 3
	;do_test_ble_bgt $ba, $bb, 4
	;do_test_ble_bgt $bb, $bb, 5
	;do_test_ble_bgt $bc, $bb, 6
	
	ldrxi_abs r0, branch_test_result_arr, 0
	ldrxi_abs r1, branch_test_result_arr, 1
	ldrxi_abs r2, branch_test_result_arr, 2
	ldrxi_abs r3, branch_test_result_arr, 3
	ldrxi_abs r4, branch_test_result_arr, 4
	ldrxi_abs r5, branch_test_result_arr, 5
	ldrxi_abs r6, branch_test_result_arr, 6
	
	
@done:
	jumpi end_simulation


test_blo_bhs:
	cmp r0, r1
	blo @less_than
	bhs @greater_than_or_equal
	
@neither:
	cpyi r0, $ff
	bra @done
	
@less_than:
	cpyi r0, $00
	bra @done
	
@greater_than_or_equal:
	cpyi r0, $01
	;bra @done
	
@done:
	basic_ret
	

test_bls_bhi:
	cmp r0, r1
	bls @less_than_or_equal
	bhi @greater_than
	
@neither:
	cpyi r0, $ff
	bra @done
	
@less_than_or_equal:
	cpyi r0, $02
	bra @done
	
@greater_than:
	cpyi r0, $03
	;bra @done
	
@done:
	basic_ret


test_blt_bge:
	cmp r0, r1
	blt @less_than
	bge @greater_than_or_equal
	
@neither:
	cpyi r0, $ff
	bra @done
	
@less_than:
	cpyi r0, $04
	bra @done
	
@greater_than_or_equal:
	cpyi r0, $05
	;bra @done
	
@done:
	basic_ret
	

test_ble_bgt:
	cmp r0, r1
	ble @less_than_or_equal
	bgt @greater_than
	
@neither:
	cpyi r0, $ff
	bra @done
	
@less_than_or_equal:
	cpyi r0, $06
	bra @done
	
@greater_than:
	cpyi r0, $07
	;bra @done
	
@done:
	basic_ret




testing_main:
	push_pair lr
	
	;cpypi r0p, 2000
	;cpyi r2, 30
	;cpyi r2, 2
	
	;calli slow_umod_16_by_8
	;calli long_udiv_16_by_8
	
	;calli test_long_udiv
	
	;calli do_tests
	
	
@done:
	pop_pair lr
	basic_ret

do_tests:
	push_pair lr
	
	;cpyi r0, $09
	;calli test_ldst
	;;calli test_ldst_and_push_pop
	;cmpi r0, $00
	;cpyi r0, ( $02 | $80 )
	;beq @testing_failed
	;
	;
	;
	;calli test_32_bit_add
	;cmpi r0, $00
	;cpyi r0, ( $03 | $80 )
	;beq @testing_failed
	;
	;calli test_32_bit_subtract
	;cmpi r0, $00
	;cpyi r0, ( $04 | $80 )
	;beq @testing_failed
	;
	;
	;calli test_32_bit_add_immediate
	;cmpi r0, $00
	;cpyi r0, ( $05 | $80 )
	;beq @testing_failed
	;
	;calli test_32_bit_subtract_immediate
	;cmpi r0, $00
	;cpyi r0, ( $06 | $80 )
	;beq @testing_failed
	;
	;
	;calli test_addpb
	;cmpi r0, $00
	;cpyi r0, ( $07 | $80 )
	;beq @testing_failed
	;
	;calli test_subpb
	;cmpi r0, $00
	;cpyi r0, ( $08 | $80 )
	;beq @testing_failed
	;
	;calli test_and_orr_inv_invp
	;cmpi r0, $00
	;cpyi r0, ( $09 | $80 )
	;beq @testing_failed
	;
	;
	;calli test_xor
	;cmpi r0, $00
	;cpyi r0, ( $0a | $80 )
	;beq @testing_failed
	;
	;
	;calli test_asr
	;cmpi r0, $00
	;cpyi r0, ( $0b | $80 )
	;beq @testing_failed
	;
	;
	;calli test_rol
	;cmpi r0, $00
	;cpyi r0, ( $0c | $80 )
	;beq @testing_failed
	
	
@testing_succeeded:
	cpyi r0, $01
	bra @testing_done
	
@testing_failed:
	;cpyi r0, $00
	
@testing_done:
	pop_pair lr
	basic_ret



isr_main:
	push_flags
	
	;cpyi r0, $9a
	;calli other_file_test_subroutine
	
	pop_flags
	
	cpypira pc
	;reti



