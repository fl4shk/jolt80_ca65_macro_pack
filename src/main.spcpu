.include "../include/spcpu_ca65_macro_pack.spinc"
.include "test_var_stuff.spinc"
.include "misc_utility_macros.spinc"



.segment "INIT"
true_start:
	jumpi start
	;cpypi r0p, 3
	;cpypi r2p, 3
	;jumpi infin


.segment "ROM"



;non_immediate_indexed_ldst_test:
;	;;cpypi r2p, $33aa
;	;;cpypi r4p, $99bb
;	cpypi r8p, some_var
;	cpypi lr, 0
;	
;	cpyi r0, $f8
;	strx r0, r8p, lr
;	;strx r0, r8p, lr
;	
;	
;	addi r13, 1
;	;addi r9, 1
;	
;	cpyi r0, $aa
;	strx r0, r8p, lr
;	
;	
;	subi r13, 1
;	;subi r9, 1
;	ldrx r1, r8p, lr
;	
;	addi r13, 1
;	;addi r9, 1
;	ldrx r2, r8p, lr


;; ARM-style register saving
;test_sr:
;	; Allow lr to be used for local variables and stuffs
;	push_pair lr
;	
;	
;	; return
;	;pop_pair pc
;	pop_pair lr
;	swp lr, pc
;	
;	
;	;cpyp pc, lr
;	
;	;jump lr
;	
;
;branch_test:
;	;calli test_sr
;	;bra branch_test
;	cpyi r0, 4
;	;cmpi r0, 3
;	;bcs branch_test
;	;bls branch_test
;	;bhi branch_test

;stack_test:
;	push_pair lr
;	
;	cpyi r0, $99
;	cpyi r1, $77
;	cpyi r2, $66
;	
;	;multi_push_regs r0, r1, r2
;	;multi_pop_regs r4, r5, r6
;	push_reg r0
;	push_reg r1
;	
;	pop_reg r1
;	pop_reg r0
;	
;	
;	pop_pair lr
;	basic_jump lr 

;.macro abs rA
;	
;.endmac

;temp:
;	;push_pair lr
;	
;	;pop_and_ret r0p
;	
;	basic_jump lr


start:
	init_sp
	;cpypi r2p, other_file_test_subroutine
	;call r2p
	;calli other_file_test_subroutine
	;cpypi r0p, 3
	;cpypi 
	
	
	;cpyi r0, $89
	;cpyi r1, $73
	;cpyi r2, $3b
	;cpyi r3, $6a
	cpypi r0p, $8973
	cpypi r2p, $3b6a
	
	;push_pair r0p
	;push_pair r2p
	
	;pop_pair r4p
	;pop_pair r6p
	
	
	;multi_push_regs r0, r1, r2, r3
	;multi_push_pairs r2p
	multi_push_pairs r0p, r2p
	
	pop_reg r7
	pop_reg r6
	;pop_reg r5
	;pop_reg r4
	pop_pair r4p
	
	;;pop_pair r4p
	;;multi_ldpxi 
	;multi_pop_pairs r4p
	
	jumpi end_simulation



